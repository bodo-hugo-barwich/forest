name: Testing on Ubuntu

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
     branches:    
      - main  

env:
  CARGO_TERM_COLOR: always

jobs:
  ubuntu-testing:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        rust-version: [1.52.0, 1.55.0, 1.57.0, 1.48.0]

    steps:
    # List all installed Rust Libraries
    - name: List all installed Rust Libraries
      run: |
        dpkg --get-selections | grep -i rust | wc -l 
        dpkg --get-selections | grep -i rust | sort
        
    # List all available Rust Libraries
    - name: List available Rust Libraries
      run: |
        cat /etc/apt/sources.list
        sudo apt-get update 
        apt-cache search rust | sort
        
    # Show Environment and Compiler Version
    - name: Show Environment and Compiler Version
      run: | 
        echo "Operating System:" && cat /etc/os-release
        echo "RustUp Version:" && rustup --version
        echo "RustUp Components Installed:" && rustup component list --installed
        echo "Rust Compiler Version:" && rustc --version
        
    # Uninstall previous Rust Version
    - name: Uninstall Preinstalled Rust Version
      run: | 
        echo "Directory Content of '/home/runner/.cargo/bin':"
        ls -lah ~/.cargo/bin
        echo "Uninstalling Rust Compiler:"
        rustup uninstall rustc
        rustup uninstall rust-std
        rustup uninstall cargo
        rustup uninstall rustfmt
        rustup uninstall cargo-fmt
        
    # Install Rust Version according to Test Matrix
    - name: Install Rust Version '${{ matrix.rust-version }}'
      run: | 
        echo "Requested Rust Compiler Version:" ${{ matrix.rust-version }}
        rustup install ${{ matrix.rust-version }}
        echo "Rust Compiler Version:" && rustc --version
        
    - uses: actions/checkout@v2
#    - name: Build
#      run: cargo build --verbose
#    - name: Run tests
#      run: cargo test --verbose

